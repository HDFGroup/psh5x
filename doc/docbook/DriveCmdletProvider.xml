<?xml version="1.0" encoding="UTF-8"?>
<?xml-model href="http://www.oasis-open.org/docbook/xml/5.0/rng/docbookxi.rng" schematypens="http://relaxng.org/ns/structure/1.0"?>
<sect1 xml:id="drive_cmdlet_provider" xmlns="http://docbook.org/ns/docbook"
    xmlns:xi="http://www.w3.org/2001/XInclude" xmlns:xlink="http://www.w3.org/1999/xlink"
    version="5.0">
    <title>DriveCmdletProvider</title>
    <para>The <literal>DriveCmdletProvider</literal> class serves as a base class for providers that
        access a data store through Windows PowerShell drives. The
            <literal>DriveCmdletProvider</literal> supports PowerShell drives which are "mapped" to
        HDF5 files. </para>
    <para>The list of exisiting PowerShell drives can be displayed via the
            <literal>Get-PSDrive</literal> cmdlet.</para>
    <screen>
<prompt>PS:1 ></prompt> <command>Get-PSDrive</command>
Name      Used (GB)   Free (GB) Provider      Root
----      ---------   --------- --------      ----
Alias                           Alias
C         112.80         185.19 FileSystem    C:\
cert                            Certificate   \
D            .23            .51 FileSystem    D:\
Env                             Environment
Function                        Function
h5tmp                           HDF5          h5tmp:\
HKCU                            Registry      HKEY_CURRENT_USER
HKLM                            Registry      HKEY_LOCAL_MACHINE
Variable                        Variable
WSMan                           WSMan
    </screen>
    <para>As part of its initialization, the <literal>DriveCmdletProvider</literal> creates an empty
        HDF5 file and maps it as a PowerShell drive called <literal>h5tmp</literal> with read/write
        access. This drive is intended as a sandbox environment.</para>
    <note>
        <para>The PSH5X <literal>h5tmp</literal> drive is specific to a PowerShell session and the
            HDF5 files backing the <literal>h5tmp</literal> drives in different sessions are
                <emphasis role="bold">not</emphasis> the same. The full path to the HDF5 file behind
                <literal>h5tmp</literal> is stored in the <literal>PSH5XTmpFile</literal>
            environment variable. The file is not deleted when the session is closed so that it can
            be recovered. For example:</para>
        <screen>
<prompt>PS:1 ></prompt> <command>$Env:PSH5XTmpFile</command>
C:\Users\gheber\AppData\Local\Temp\tmpC798.tmp
      </screen>
    </note>
    <para>PSH5X implements the <literal>NewDrive()</literal> and <literal>RemoveDrive()</literal>
        methods that let users map exisiting HDF5 files as PowerShell drives or to remove such
        drives (and close the underlying HDF5 files).</para>

    <sect2 xml:id="new_psdrive">
        <title><literal>New-PSDrive</literal></title>
        <para>The <literal>New-PSDrive</literal> cmdlet creates a Windows PowerShell drive in the
            current session. The name of the new drive is provided via the <literal>-Name</literal>
            argument and the name of the HDF5 file backing the new drive is specified via the
                <literal>-Path</literal> argument. The file access mode is controlled via the
                <literal>-Mode</literal> argument and can be set to read-only (default) or
            read/write. Typically, the directory hierarchy of the new drive begins at the HDF5
            file's HDF5 root group. This behavior can be changed by providing an HDF5 path name to
            an HDF5 group in the file via the <literal>-Root</literal> argument. </para>
        <para>You can use the Windows PowerShell drives that you create to access the data in the
            associated HDF5 file, just like you would do with any mapped drive. You can change
            locations into the drive (using <literal>Set-Location</literal>, <literal>cd</literal>,
            or <literal>chdir</literal>) and access the contents of the drive (using
                <literal>Get-Item</literal>, <literal>Get-Childitem</literal>, or
                <literal>dir</literal>).</para>
        <cmdsynopsis>
            <command>New-PSDrive</command>
            <arg choice="req">-Name <replaceable>string</replaceable></arg>
            <arg choice="req">-PSProvider <phrase>HDF5</phrase>
            </arg>
            <arg choice="req">-Path <replaceable>string</replaceable></arg>
            <arg choice="req">-Root <replaceable>string</replaceable></arg>
            <sbr/>
            <arg choice="opt">-Mode <group>
                    <option>RO,</option>
                    <option>RW</option>
                </group></arg>
            <arg>-Force</arg>
        </cmdsynopsis>
        <variablelist>
            <varlistentry>
                <term>-Name</term>
                <listitem>
                    <para>Specifies a name for the new drive. You can use any valid string for the
                        name. You are not limited to drive letters. Windows PowerShell drives names
                        are case-sensitive.</para>
                </listitem>
            </varlistentry>
        </variablelist>
        <variablelist>
            <varlistentry>
                <term>-Path</term>
                <listitem>
                    <para>The HDF5 file name that the drive is mapped to.</para>
                </listitem>
            </varlistentry>
        </variablelist>
        <variablelist>
            <varlistentry>
                <term>-Root</term>
                <listitem>
                    <para>Specifies the HDF5 group that the Windows PowerShell drive is mapped
                        to.</para>
                </listitem>
            </varlistentry>
        </variablelist>
        <variablelist>
            <varlistentry>
                <term>-Mode</term>
                <listitem>
                    <para>An existing file can be access in read-only or read/write mode. The
                        default is read-only.</para>
                </listitem>
            </varlistentry>
        </variablelist>
        <variablelist>
            <varlistentry>
                <term>-Force</term>
                <listitem>
                    <para>Force the creation of a new HDF5 file.</para>
                </listitem>
            </varlistentry>
        </variablelist>
        <example>
            <title>Creating a new PowerShell drive from an HDF5 file</title>
            <screen>
<prompt>PS:1 ></prompt> <command>New-PSDrive -Name h5new -PSProvider HDF5 `
    -Path E:\HDF5\h5\sample.h5 -Root h5new:\</command>
Name       Used (GB)     Free (GB) Provider      Root
----       ---------     --------- --------      ----
h5new                              HDF5          h5new:\
      </screen>
        </example>
        <example>
            <title>Creating a new PowerShell drive with a different root and read/write
                access</title>
            <screen>
<prompt>PS:1 ></prompt> <command>New-PSDrive -Name h5new -PSProvider HDF5 `
    -Path E:\HDF5\h5\sample.h5 -Root h5new:\A\B -Mode RW</command>
Name       Used (GB)     Free (GB) Provider      Root
----       ---------     --------- --------      ----
h5new                              HDF5          h5new:\A\B
      </screen>
        </example>
        <para>A PowerShell drive is represented as a PowerShell object. See <xref
                linkend="drive_object"/> for a detailed description of its properties.</para>

    </sect2>

    <sect2 xml:id="remove_psdrive">
        <title><literal>Remove-PSDrive</literal></title>
        <para>The <literal>Remove-PSDrive</literal> cmdlet deletes Windows PowerShell drives that
            have been created by using <literal>New-PSDrive</literal>. When deleting PowerShell
            drives mapped to HDF5 the underlying files are automatically closed with <link
                xlink:href="http://www.hdfgroup.org/HDF5/doc/RM/RM_H5F.html#File-Close"
                    ><literal>H5close</literal></link>. </para>
        <para>
            <literal>Remove-PSDrive</literal> cannot delete Windows drives or mapped network drives
            created by using other methods and it cannot delete the current working drive.</para>
        <cmdsynopsis>
            <command>Remove-PSDrive</command>
            <arg choice="req">-Name <replaceable>string[]</replaceable></arg>
        </cmdsynopsis>
        <variablelist>
            <varlistentry>
                <term>-Name</term>
                <listitem>
                    <para>Specifies the names of the Windows PowerShell drives to remove. Do not
                        type a colon (:) after the drive name.</para>
                </listitem>
            </varlistentry>
        </variablelist>
        <example>
            <title>Removing two PowerShell drives</title>
            <screen>
<prompt>PS:1 ></prompt> <command>Remove-PSDrive h5new,h51</command>
      </screen>
        </example>
    </sect2>

</sect1>
